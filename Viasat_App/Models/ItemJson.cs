// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using ItemData;
//
//    var itemJson = ItemJson.FromJson(jsonString);

namespace ItemData
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class ItemJson
    {
        [JsonProperty("item_number")]
        public long ItemNumber { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("part_type")]
        public string PartType { get; set; }

        [JsonProperty("permission_level")]
        public long PermissionLevel { get; set; }

        [JsonProperty("components")]
        public List<long> Components { get; set; }

        [JsonProperty("revision")]
        public long Revision { get; set; }
    }

    public partial class ItemJson
    {
        public static List<ItemJson> FromJson(string json) => JsonConvert.DeserializeObject<List<ItemJson>>(json, ItemData.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this List<ItemJson> self) => JsonConvert.SerializeObject(self, ItemData.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}